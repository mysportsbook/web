//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MySportsBook.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using System.Data.SqlClient;
    using System.Data;
    using System.Data.Entity.Core.EntityClient;

    public partial class MySportsBookEntities : DbContext
    {
        public MySportsBookEntities()
            : base("name=MySportsBookEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
            this.Configuration.ProxyCreationEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BatchCount> BatchCounts { get; set; }
        public virtual DbSet<Configuration_BatchType> Configuration_BatchType { get; set; }
        public virtual DbSet<Configuration_Format> Configuration_Format { get; set; }
        public virtual DbSet<Configuration_InvoicePeriod> Configuration_InvoicePeriod { get; set; }
        public virtual DbSet<Configuration_PlayerType> Configuration_PlayerType { get; set; }
        public virtual DbSet<Configuration_Screen> Configuration_Screen { get; set; }
        public virtual DbSet<Configuration_ScreenType> Configuration_ScreenType { get; set; }
        public virtual DbSet<Configuration_Status> Configuration_Status { get; set; }
        public virtual DbSet<Configuration_User> Configuration_User { get; set; }
        public virtual DbSet<Confirguration_PaymentMode> Confirguration_PaymentMode { get; set; }
        public virtual DbSet<IncomeDetail> IncomeDetails { get; set; }
        public virtual DbSet<Master_Batch> Master_Batch { get; set; }
        public virtual DbSet<Master_BatchTiming> Master_BatchTiming { get; set; }
        public virtual DbSet<Master_CoachingLevel> Master_CoachingLevel { get; set; }
        public virtual DbSet<Master_Court> Master_Court { get; set; }
        public virtual DbSet<Master_Enquiry> Master_Enquiry { get; set; }
        public virtual DbSet<Master_Player> Master_Player { get; set; }
        public virtual DbSet<Master_Role> Master_Role { get; set; }
        public virtual DbSet<Master_RoleScreen> Master_RoleScreen { get; set; }
        public virtual DbSet<Master_ScreenNumberFormat> Master_ScreenNumberFormat { get; set; }
        public virtual DbSet<Master_SMS_Config> Master_SMS_Config { get; set; }
        public virtual DbSet<Master_Sport> Master_Sport { get; set; }
        public virtual DbSet<Master_UserRole> Master_UserRole { get; set; }
        public virtual DbSet<Master_UserVenue> Master_UserVenue { get; set; }
        public virtual DbSet<Master_Venue> Master_Venue { get; set; }
        public virtual DbSet<Master_VenueScreen> Master_VenueScreen { get; set; }
        public virtual DbSet<OtherBooking> OtherBookings { get; set; }
        public virtual DbSet<OtherBookingDetail> OtherBookingDetails { get; set; }
        public virtual DbSet<Studio_ExpenseDetail> Studio_ExpenseDetail { get; set; }
        public virtual DbSet<StudioEvent> StudioEvents { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Transaction_Attendance> Transaction_Attendance { get; set; }
        public virtual DbSet<Transaction_Enquiry_Comments> Transaction_Enquiry_Comments { get; set; }
        public virtual DbSet<Transaction_PlayerSport> Transaction_PlayerSport { get; set; }
        public virtual DbSet<Transaction_Receipt> Transaction_Receipt { get; set; }
        public virtual DbSet<Transaction_Voucher> Transaction_Voucher { get; set; }
        public virtual DbSet<CCTransaction> CCTransactions { get; set; }
        public virtual DbSet<Scheduler> Schedulers { get; set; }
        public virtual DbSet<SMSTransactionRequest> SMSTransactionRequests { get; set; }
        public virtual DbSet<V_INVOICEandRECEIPT> V_INVOICEandRECEIPT { get; set; }
        public virtual DbSet<V_InvoiceDetails> V_InvoiceDetails { get; set; }
        public virtual DbSet<V_invoiceWithoutReceipt> V_invoiceWithoutReceipt { get; set; }
        public virtual DbSet<V_PlayerDetails> V_PlayerDetails { get; set; }
        public virtual DbSet<V_PlayerSport> V_PlayerSport { get; set; }
    
        public virtual int Transaction_SaveInvoice(string xML)
        {
            var xMLParameter = xML != null ?
                new ObjectParameter("XML", xML) :
                new ObjectParameter("XML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Transaction_SaveInvoice", xMLParameter);
        }
    
        public virtual int DeleteReceipt(Nullable<int> playerId)
        {
            var playerIdParameter = playerId.HasValue ?
                new ObjectParameter("PlayerId", playerId) :
                new ObjectParameter("PlayerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteReceipt", playerIdParameter);
        }

        public virtual ObjectResult<rp_COMMONPROCEDURE_Result> rp_COLLECTIONDETAIL(Nullable<int> vENUEID, Nullable<System.DateTime> mONTH, string tYPE)
        {
            var vENUEIDParameter = vENUEID.HasValue ?
                new ObjectParameter("VENUEID", vENUEID) :
                new ObjectParameter("VENUEID", typeof(int));

            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(System.DateTime));

            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rp_COMMONPROCEDURE_Result>("rp_COLLECTIONDETAIL", vENUEIDParameter, mONTHParameter, tYPEParameter);
        }

        public virtual ObjectResult<rp_COMMONPROCEDURE_Result> rp_COMMONPROCEDURE(string sTOREPROC, string pARAMETERS, Nullable<int> venueID)
        {
            var sTOREPROCParameter = sTOREPROC != null ?
                new ObjectParameter("STOREPROC", sTOREPROC) :
                new ObjectParameter("STOREPROC", typeof(string));
    
            var pARAMETERSParameter = pARAMETERS != null ?
                new ObjectParameter("PARAMETERS", pARAMETERS) :
                new ObjectParameter("PARAMETERS", typeof(string));
    
            var venueIDParameter = venueID.HasValue ?
                new ObjectParameter("VenueID", venueID) :
                new ObjectParameter("VenueID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rp_COMMONPROCEDURE_Result>("rp_COMMONPROCEDURE", sTOREPROCParameter, pARAMETERSParameter, venueIDParameter);
        }

        public DataTable GetResultReport(int venueID, string storeProc, string parameters)
        {
            DataSet retVal = new DataSet();
            EntityConnection entityConn = (EntityConnection)((IObjectContextAdapter)this).ObjectContext.Connection;
            SqlConnection sqlConn = (SqlConnection)entityConn.StoreConnection;
            SqlCommand cmdReport = new SqlCommand("rp_COMMONPROCEDURE", sqlConn);
            SqlDataAdapter daReport = new SqlDataAdapter(cmdReport);
            using (cmdReport)
            {
                SqlParameter questionIdPrm = new SqlParameter("PARAMETERS", parameters);
                SqlParameter storeprocPrm = new SqlParameter("STOREPROC", storeProc);
                SqlParameter venueIDPrm = new SqlParameter("venueID", venueID);
                cmdReport.CommandType = CommandType.StoredProcedure;
                cmdReport.Parameters.Add(storeprocPrm);
                cmdReport.Parameters.Add(questionIdPrm);
                cmdReport.Parameters.Add(venueIDPrm);
                daReport.Fill(retVal);
            }
            return retVal.Tables[0];
        }
        
        }
}
