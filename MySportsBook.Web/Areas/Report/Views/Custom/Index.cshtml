@model DataTable
@{
    /**/

    ViewBag.Title = "Index";
    if (ViewContext.ViewBag.IsAdmin != null && ViewContext.ViewBag.IsAdmin) { Layout = "/Views/Shared/Layout/_AdminLayout.cshtml"; } else { Layout = "/Views/Shared/Layout/_Layout.cshtml"; }
}

@using System.Data;
@{ var data = Model; }

<main class="main">
    <!-- Breadcrumb-->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">Home</li>
        <li class="breadcrumb-item">@Html.ActionLink("Report", "Index")</li>
        <li class="breadcrumb-item active">Custom</li>
    </ol>
    <div class="container-fluid">
        <div class="animated fadeIn">
            <div class="card">
                <div class="card-header">
                    <i class="fa fa-align-justify"></i>
                    <strong>Custom</strong>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <div class="row" style="margin-bottom:10px;">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.Label("Report Type", htmlAttributes: new { @class = "control-label" })
                                    @*<div class="input-group">
            <select name="ReportType" class="form-control">
                <option value="MonthlyCollection">Monthly Collection</option>
                <option value="MonthlyTransaction">Monthly Transaction</option>
                <option value="PendingPayments">PendingPayments</option>
                <option value="ExcessPayments">Excess Payments</option>
                <option value="Defaulter">Defaulter</option>

            </select>
        </div>*@
                                    @Html.DropDownList("ReportType", null, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.Label("Month")
                                    <div class="input-group">
                                        @Html.TextBox("Month", "", new { @class = "form-control month" })
                                        <span class="input-group-append">
                                            <button class="btn btn-primary" type="submit">Search<i class="fa fa-search" style="margin-left: 5px;"></i></button>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="">
                        @if (Model != null && Model.Rows.Count > 0)
                        {
                            <table class="table table-striped table-bordered table-responsive-sm table-hover table-outline mb-0" style="width:100%">
                                <thead class="thead-light">
                                    <tr>
                                        @foreach (DataColumn column in Model.Columns)
                                        {
                                            <th>
                                                @column.ColumnName
                                            </th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (DataRow item in Model.Rows)
                                    {
                                        <tr>

                                            @foreach (DataColumn column in Model.Columns)
                                            {
                                                string _result = string.Empty;
                                                if (column.DataType == typeof(decimal) || column.DataType == typeof(decimal?) || column.DataType == typeof(double) || column.DataType == typeof(double?))
                                                {
                                                    _result = ((decimal?)item[column.ColumnName]).HasValue ? ((decimal?)item[column.ColumnName]).Value.ToString("0.00") : "0.00";
                                                }
                                                else if (column.DataType == typeof(bool) || column.DataType == typeof(bool?))
                                                {
                                                    _result = ((bool?)item[column.ColumnName]).HasValue && ((bool?)item[column.ColumnName]).Value ? "True" : "False";
                                                }
                                                else
                                                {
                                                    _result = item[column.ColumnName].ToString();
                                                }
                                                <td>
                                                    @_result
                                                </td>

                                            }
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    </div>
                    @if (Model != null && Model.Rows.Count > 0 && (Model.Columns.Contains("Payment Mode") || Model.Columns.Contains("Mode ")))
                    {
                        if (Model.Columns.Contains("Payment Mode"))
                        {
                            <div class="row">
                                @foreach (var item in data.AsEnumerable().GroupBy(x => x.Field<string>("Payment Mode")).ToDictionary(g => g.Key, g => g.Sum(s => s.Field<decimal>("Amount"))))
                                {
                                    <div class="card text-center">
                                        <h6>Total @item.Key </h6>
                                        <div class="card-body text-center">
                                            <span class="label label-default font-weight-bold">@item.Value.ToString("0.00")</span>
                                        </div>
                                    </div>
                                    <span>&nbsp;</span>
                                }
                            </div>
                            <div class="card text-center">
                                <h6>Total</h6>
                                <div class="card-body text-center">
                                    <span class="label label-default font-weight-bold"> @data.AsEnumerable().Sum(myRow => myRow.Field<decimal>("Amount")).ToString("0.00")</span>
                                </div>
                            </div>
                        }
                        else if (Model.Columns.Contains("Mode "))
                        {
                            <div class="row">
                                @foreach (var item in data.AsEnumerable().GroupBy(x => x.Field<string>("Mode ")).ToDictionary(g => g.Key, g => g.Sum(s => s.Field<decimal>("Paid"))))
                                {
                                    <div class="card text-center">
                                        <h6>Total @item.Key </h6>
                                        <div class="card-body text-center">
                                            <span class="label label-default font-weight-bold">@item.Value.ToString("0.00")</span>
                                        </div>
                                    </div>
                                    <span>&nbsp;</span>
                                }
                                <div class="card text-center">
                                    <h6>Total</h6>
                                    <div class="card-body text-center">
                                        <span class="label label-default font-weight-bold"> @data.AsEnumerable().Sum(myRow => myRow.Field<decimal>("Paid")).ToString("0.00")</span>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    @*<div class="row">
                            <div class="form-group row">
                                <label class="col-md-6 col-form-label" for="text-input">Total Cash</label>
                                <div class="col-md-6">
                                    @Html.TextBox("txtCash", data.AsEnumerable().Where(myRow => myRow.Field<string>("Payment Mode") == "Cash").Sum(myRow => myRow.Field<decimal>("Amount")).ToString("0.00"), new { @class = "form-control", @readonly = "true" })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-6 col-form-label" for="text-input">Total Transfer</label>
                                <div class="col-md-6">
                                    @Html.TextBox("txtTransfer", data.AsEnumerable().Where(myRow => myRow.Field<string>("Payment Mode") == "Transfer").Sum(myRow => myRow.Field<decimal>("Amount")).ToString("0.00"), new { @class = "form-control", @readonly = "true" })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-6 col-form-label" for="text-input">Total Cheque</label>
                                <div class="col-md-6">
                                    @Html.TextBox("txtCheque", data.AsEnumerable().Where(myRow => myRow.Field<string>("Payment Mode") == "Cheque").Sum(myRow => myRow.Field<decimal>("Amount")).ToString("0.00"), new { @class = "form-control", @readonly = "true" })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-6 col-form-label" for="text-input">Total Paytm</label>
                                <div class="col-md-6">
                                    @Html.TextBox("txtPaytm", data.AsEnumerable().Where(myRow => myRow.Field<string>("Payment Mode") == "Paytm").Sum(myRow => myRow.Field<decimal>("Amount")).ToString("0.00"), new { @class = "form-control", @readonly = "true" })
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-6 col-form-label" for="text-input">Total Collection</label>
                                <div class="col-md-6">
                                    @Html.TextBox("txtTotal", data.AsEnumerable().Sum(myRow => myRow.Field<decimal>("Amount")).ToString("0.00"), new { @class = "form-control", @readonly = "true" })
                                </div>
                            </div>

                        </div>*@
                </div>
            </div>
        </div>
    </div>
</main>
@Html.Partial("~/Views/Shared/Script/_DateTimePicker.cshtml")
@Html.Partial("/Views/Shared/Script/_EditDelete.cshtml")
