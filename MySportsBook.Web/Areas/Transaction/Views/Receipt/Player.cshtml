@*@model IEnumerable<MySportsBook.Model.ViewModel.PlayerModel>*@
@model IEnumerable<MySportsBook.Model.Master_Player>

@{
    ViewBag.Title = "Index";
    if (ViewContext.ViewBag.IsAdmin != null && ViewContext.ViewBag.IsAdmin) { Layout = "/Views/Shared/Layout/_AdminLayout.cshtml"; } else { Layout = "/Views/Shared/Layout/_Layout.cshtml"; }
}
@Html.Partial("/Views/Shared/Script/_EditDelete.cshtml")
<main class="main">
    <!-- Breadcrumb-->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">Home</li>
        <li class="breadcrumb-item active">View</li>
    </ol>
    <div class="container-fluid">
        <div class="animated fadeIn">
            <div class="card">
                <div class="card-header">
                    <i class="fa fa-align-justify"></i>
                    <strong>Receipt</strong>
                </div>
                <div class="card-body">
                    <table class="table table-striped table-bordered table-responsive-sm table-hover table-outline mb-0" style="width:100%">
                        <thead class="thead-light">
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.FirstName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.LastName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Mobile)
                                </th>
                                <th>
                                    @Html.DisplayName("Sport")
                                </th>
                                <th>
                                    @Html.DisplayName("Batch")
                                </th>
                                <th>
                                    @Html.DisplayName("Fees")
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Configuration_Status.Status)
                                </th>
                                <th width="65px">@Html.DisplayName("Action")</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.FirstName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LastName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Mobile)
                                    </td>
                                    <td>
                                        @{
                                            string _sports = string.Empty;
                                            try
                                            {
                                                _sports = item.Transaction_PlayerSport.Count > 0 ? string.Join(", ", item.Transaction_PlayerSport.Where(x => x.FK_StatusId == 1).Select(i => i.Master_Sport.SportName)) : string.Empty;

                                            }
                                            catch (Exception)
                                            {

                                            }
                                        }
                                        @Html.DisplayFor(modelItem => _sports)
                                    </td>
                                    <td>
                                        @{
                                            string _batches = string.Empty;
                                            try
                                            {
                                                _batches = item.Transaction_PlayerSport.Count > 0 ? string.Join(", ", item.Transaction_PlayerSport.Where(x => x.FK_StatusId == 1).Select(i => i.Master_Batch.BatchName)) : string.Empty;

                                            }
                                            catch (Exception)
                                            {

                                            }
                                        }
                                        @Html.DisplayFor(modelItem => _batches)
                                    </td>
                                    <td>
                                        @{
                                            string _Fees = item.Transaction_PlayerSport.Count > 0 ? String.Format("{0:0.00}", item.Transaction_PlayerSport.Sum(i => i.Fee)) : string.Empty;
                                        }
                                        @Html.DisplayFor(modelItem => _Fees)
                                    </td>
                                    <td>
                                        @if (item.FK_StatusId == 1)
                                        {
                                            <span class="badge badge-success"> @Html.DisplayFor(modelItem => item.Configuration_Status.Status)</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-danger"> @Html.DisplayFor(modelItem => item.Configuration_Status.Status)</span>
                                        }

                                    </td>
                                    <td>
                                        <div>
                                            @{
                                                <button class="btn btn-danger" onclick="deleteReceipt(@item.PK_PlayerId,0)" title="Delete Last Generated Receipt" type="button">
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</main>
<script>
    function deleteReceipt(id,receiptNo) {
        swal({
            title: "Are you sure?",
            text: "Do you want to delete the last generated receipt! - " + receiptNo,
            icon: "warning",
            buttons: true,
        }).then((confirm) => {
            if (confirm) {
                loader();
                $.ajax({
                    type: "GET",
                    url:  "@Url.Action("Delete", "Receipt", new { Area= "Transaction" })"+"/"+id,
                    datatype: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        loader();
                        if (response) {
                            swal({
                                title: "Success!",
                                text: "Deleted sucessfully!",
                                type: "success",
                                icon: "success",
                                showCancelButton: false,
                                confirmButtonClass: "btn-success",
                                confirmButtonText: "Ok!",
                                closeOnConfirm: false
                            });
                        }
                        else {
                            swal("Failed!", "Delete failed due to no receipt generated this month!", "error", {
                                icon: "error"
                            });
                        }
                    },
                    error: function (jqXHR, exception) {
                        loader();
                        swal("Failed!", "Delete failed due to no receipt generated this month! -" + exception, "error", {
                            icon: "error"
                        });
                    }
                });
            }
        });

    }
</script>
